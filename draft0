#!/usr/bin/python
import signal
import sys
from datetime import datetime
from time import sleep
import Adafruit_DHT
import RPi.GPIO as GPIO

def signal_handler(sig, frame):
    cooling_off()
    GPIO.cleanup()
    f.close()
    sys.exit(0)

signal.signal(signal.SIGINT,  signal_handler)
signal.signal(signal.SIGHUP,  signal_handler)
signal.signal(signal.SIGTERM, signal_handler)

log      = '/root/script/humctl00/reading.txt'
temp_min = 21.25
temp_max = 21.75
sleep_t  = 60

def init_relays():
    GPIO.setmode(GPIO.BOARD)
    GPIO.setup(3, GPIO.OUT)
    GPIO.setup(5, GPIO.OUT)
    cooling_off()
    return

def cooling_off():
    GPIO.output(3, GPIO.HIGH)
    GPIO.output(5, GPIO.HIGH)
    return

def cooling_on():
    GPIO.output(3, GPIO.LOW)
    GPIO.output(5, GPIO.LOW)
    return

def read_sensor():
    rh, temp = Adafruit_DHT.read_retry( Adafruit_DHT.AM2302, 4)
    return rh, temp

def main():
    init_relays()
    f = open(log, 'a')
    while 1:
        rh, temp = read_sensor()
        while temp > temp_max:
            cooling_on()
            f.write("on," + str(temp) + "," +
                    str(rh) + "," +
                    str(datetime.now()) + "\n")
            f.flush()
            sleep(sleep_t)
            rh, temp = read_sensor()
        cooling_off()
        f.write("off," + str(temp) + "," +
                str(rh) + "," +
                str(datetime.now()) + "\n")
        f.flush()
        sleep(sleep_t)
    f.close()

if __name__ == "__main__":
    main()
